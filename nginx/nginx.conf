server {
    listen 80;

    # 백엔드 API 요청
    location /api/ {
        # 모든 요청에 CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # 프리플라이트 요청 처리 (OPTIONS 메소드)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # 프록시 설정
        proxy_pass http://backend-container:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    # 프론트엔드 요청
    location / {
        # 모든 요청에 CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # 프리플라이트 요청 처리 (OPTIONS 메소드)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # 프록시 설정
        proxy_pass http://frontend-container:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # MinIO 접근 설정 (업로드 및 파일 접근)
    location /image/ {
        proxy_pass http://image-container:9000;
        proxy_http_version 1.1;

        # 필수 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 필요한 경우 Authorization 헤더를 명시적으로 전달합니다.
        proxy_set_header Authorization $http_authorization;

        # 모든 설정에 CORS 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # 프리플라이트 요청 처리 (OPTIONS 메소드)
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # MinIO 관리 콘솔 접근 설정
    location /minio/ {
        # 모든 요청에 CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # 프리플라이트 요청 처리 (OPTIONS 메소드)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # MinIO 관리 콘솔 프록시 설정
        proxy_pass http://image-container:9001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
